---
import Layout from '../../layouts/Layout.astro';
import { getProducts, getProductsByCategory } from '../../lib/products-data';

const products = await getProducts();
const restaurantProducts = await getProductsByCategory('restaurant');
const mobileProducts = await getProductsByCategory('mobile');
const tvProducts = await getProductsByCategory('tv');
const webProducts = await getProductsByCategory('web');
---

<Layout title="Our Products - DevExpress" description="Explore our range of professional digital solutions delivered in 24 hours">
  <!-- Hero Section -->
  <section class="bg-gradient-to-br from-primary-900 to-secondary-900 text-white py-20">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
      <h1 class="text-4xl md:text-5xl font-bold mb-6">Our Products</h1>
      <p class="text-xl text-gray-200 max-w-3xl mx-auto">
        Professional digital solutions crafted for your business needs. 
        Choose from our proven products, all delivered within 24 hours.
      </p>
    </div>
  </section>

  <!-- Filter Section -->
  <section class="py-8 bg-transparent sticky top-16 z-40">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex flex-wrap justify-center gap-4">
        <button class="filter-btn active px-6 py-2 rounded-full bg-primary-600 text-white font-medium transition-all" data-filter="all">
          All Products
        </button>
        <button class="filter-btn px-6 py-2 rounded-full bg-white text-gray-700 hover:bg-gray-100 font-medium transition-all border" data-filter="restaurant">
          Restaurant Solutions
        </button>
        <button class="filter-btn px-6 py-2 rounded-full bg-white text-gray-700 hover:bg-gray-100 font-medium transition-all border" data-filter="mobile">
          Mobile Apps
        </button>
        <button class="filter-btn px-6 py-2 rounded-full bg-white text-gray-700 hover:bg-gray-100 font-medium transition-all border" data-filter="tv">
          TV Apps
        </button>
        <button class="filter-btn px-6 py-2 rounded-full bg-white text-gray-700 hover:bg-gray-100 font-medium transition-all border" data-filter="web">
          Websites
        </button>
      </div>
    </div>
  </section>

  <!-- Products Grid -->
  <section class="py-16">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="products-grid">
        {products.map((product) => {
          const categoryLabels = {
            'restaurant': 'Restaurant Solutions',
            'mobile': 'Mobile Apps',
            'tv': 'TV Apps',
            'web': 'Websites'
          };
          
          const categoryColors = {
            'restaurant': 'from-green-500 to-emerald-600',
            'mobile': 'from-blue-500 to-indigo-600',
            'tv': 'from-purple-500 to-violet-600',
            'web': 'from-orange-500 to-red-600'
          };
          
          return (
            <div class="product-card bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-2" data-category={product.category}>
              <div class="relative">
                <img src={product.featured_image} alt={product.name} class="w-full h-48 object-cover rounded-t-xl" />
                <div class={`absolute top-4 left-4 px-3 py-1 rounded-full text-white text-sm font-medium bg-gradient-to-r ${categoryColors[product.category]}`}>
                  {categoryLabels[product.category]}
                </div>
              </div>
              
              <div class="p-6">
                <h3 class="text-xl font-bold text-gray-900 mb-2">{product.name}</h3>
                <p class="text-gray-600 mb-4">{product.short_description}</p>
                
                <div class="mb-4">
                  <div class="flex flex-wrap gap-2">
                    {product.features.slice(0, 3).map((feature) => (
                      <span class="px-2 py-1 bg-gray-100 text-gray-700 text-xs rounded-full">{feature}</span>
                    ))}
                  </div>
                </div>

                <div class="flex flex-col space-y-3">
                  <div class="flex items-center justify-between">
                    <div>
                      <span class="text-sm text-gray-500">Starting from</span>
                      <div class="text-2xl font-bold text-primary-600">â‚¹{product.base_price.toLocaleString()}</div>
                    </div>
                  </div>
                  <div class="flex justify-center">
                    <a 
                      href={`/products/${product.slug}`}
                      class="w-full bg-gradient-to-r from-primary-600 to-secondary-600 hover:from-primary-700 hover:to-secondary-700 text-white px-4 py-2 rounded-lg font-medium transition-all transform hover:scale-105 shadow-lg hover:shadow-xl text-center"
                    >
                      View Details
                    </a>
                  </div>
                </div>
              </div>
            </div>
          );
        })}
      </div>
    </div>
  </section>

  <!-- CTA Section -->
  <section class="py-16 bg-gradient-to-r from-primary-600 to-secondary-600 text-white">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
      <h2 class="text-3xl font-bold mb-4">Need Something Custom?</h2>
      <p class="text-xl mb-8 opacity-90">
        Don't see exactly what you need? Contact us for a custom solution tailored to your requirements.
      </p>
      <a href="/contact?project_type=custom&project_details=I'm interested in a custom solution tailored to my specific requirements. Please provide more information about your custom development services." class="bg-white text-primary-600 hover:bg-gray-100 px-8 py-3 rounded-lg font-semibold transition-colors">
        Get Custom Quote
      </a>
    </div>
  </section>
</Layout>

<script>
  // Product filtering
  document.querySelectorAll('.filter-btn').forEach(button => {
    button.addEventListener('click', () => {
      // Remove active class from all buttons
      document.querySelectorAll('.filter-btn').forEach(btn => {
        btn.classList.remove('active', 'bg-primary-600', 'text-white');
        btn.classList.add('bg-white', 'text-gray-700', 'border');
      });
      
      // Add active class to clicked button
      button.classList.remove('bg-white', 'text-gray-700', 'border');
      button.classList.add('active', 'bg-primary-600', 'text-white');
      
      // Get filter value
      const filter = (button as HTMLElement).dataset.filter;
      
      // Filter products
      document.querySelectorAll('.product-card').forEach(card => {
        if (filter === 'all' || (card as HTMLElement).dataset.category === filter) {
          (card as HTMLElement).style.display = 'block';
          card.classList.add('animate-fade-in');
        } else {
          (card as HTMLElement).style.display = 'none';
        }
      });
    });
  });





  // Add animation classes
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('animate-fade-in');
      }
    });
  });

  document.querySelectorAll('.product-card').forEach(card => {
    observer.observe(card);
  });
</script>

<style>
  .animate-fade-in {
    animation: fadeIn 0.6s ease-out forwards;
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }

  /* Code modal styles */
  #code-modal {
    backdrop-filter: blur(5px);
  }

  .bg-gray-900 pre {
    font-family: 'Courier New', monospace;
    line-height: 1.5;
  }

  .copy-code-btn {
    transition: all 0.2s ease;
  }
</style>